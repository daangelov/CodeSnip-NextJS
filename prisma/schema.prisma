generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// Necessary for Next auth
model Account {
  id                Int     @id @default(autoincrement())
  userId            Int     @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           Int      @id @default(autoincrement())
  sessionToken String   @unique @map("session_token")
  userId       Int      @map("user_id")
  expires      DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id            Int       @id @default(autoincrement())
  name          String?
  email         String?   @unique(map: "UK_EMAIL")
  emailVerified DateTime? @map("email_verified")
  image         String?
  dateCreated   DateTime  @default(now()) @map("date_created") @db.DateTime(0)
  dateUpdated   DateTime? @map("date_updated") @db.DateTime(0)
  accounts      Account[]
  sessions      Session[]
  snippets      Snippet[]

  @@map("users")
}

// model User {
//   id           Int       @id @default(autoincrement())
//   email        String    @unique(map: "UK_EMAIL") @db.VarChar(100)
//   name         String    @db.VarChar(32)
//   password     String    @db.VarChar(100)
//   passwordSalt String    @map("password_salt") @db.VarChar(30)
//   dateCreated  DateTime  @default(now()) @map("date_created") @db.DateTime(0)
//   dateUpdated  DateTime? @map("date_updated") @db.DateTime(0)
//   snippets     Snippet[]
//
//   @@map("users")
// }

model Snippet {
  id          Int       @id @default(autoincrement())
  userId      Int       @map("user_id")
  title       String    @db.VarChar(64)
  content     String    @db.Text
  dateCreated DateTime  @default(now()) @map("date_created") @db.DateTime(0)
  dateUpdated DateTime? @map("date_updated") @db.DateTime(0)

  user User @relation(fields: [userId], references: [id])

  @@index([userId], map: "snippets_user_id_fkey")
  @@map("snippets")
}
